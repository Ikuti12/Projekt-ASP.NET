// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Click Manage Games after logging in as Admin.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinEdit uILoginEdit = this.UIMozillaFirefoxWindow.UILoginHyperlink.UILoginEdit;
            WinEdit uIUsernameEdit = this.UIMozillaFirefoxWindow.UIItemDocument1.UIUsernameEdit;
            WinControl uIItemDocument = this.UIMozillaFirefoxWindow.UIItemPropertyPage.UIItemDocument;
            WinEdit uIPasswordEdit = this.UIMozillaFirefoxWindow.UIItemDocument1.UIPasswordEdit;
            WinButton uILoginButton = this.UIMozillaFirefoxWindow.UIItemDocument1.UILoginButton;
            WinButton uIWyświetlinformacjeosButton1 = this.UIMozillaFirefoxWindow.UIWyświetlinformacjeosButton.UIWyświetlinformacjeosButton1;
            WinEdit uIManageGamesEdit = this.UIMozillaFirefoxWindow.UIManageGamesHyperlink.UIManageGamesEdit;
            #endregion

            // Click 'Log in' text box
            Mouse.Click(uILoginEdit, new Point(29, 3));

            // Type 'Admin' in 'User name' text box
            uIUsernameEdit.Text = this.RecordedMethod1Params.UIUsernameEditText;

            // Click document
            Mouse.Click(uIItemDocument, new Point(607, 425));

            // Click 'Password' text box
            Mouse.Click(uIPasswordEdit, new Point(89, 18));

            // Click 'Password' text box
            Mouse.Click(uIPasswordEdit, new Point(93, 16));

            // Type '********' in 'Password' text box
            Keyboard.SendKeys(uIPasswordEdit, this.RecordedMethod1Params.UIPasswordEditSendKeys, true);

            // Click 'Log in' button
            Mouse.Click(uILoginButton, new Point(37, 21));

            // Click 'Wyświetl informacje o stronie' button
            Mouse.Click(uIWyświetlinformacjeosButton1, new Point(7, 6));

            // Click document
            Mouse.Click(uIItemDocument, new Point(177, 270));

            // Click 'Manage Games' text box
            Mouse.Click(uIManageGamesEdit, new Point(37, 5));
        }
        
        /// <summary>
        /// LogInAdmin - Use 'LogInAdminParams' to pass parameters into this method.
        /// </summary>
        public void LogInAdmin()
        {
            #region Variable Declarations
            WinEdit uILoginEdit = this.UIMozillaFirefoxWindow.UILoginHyperlink.UILoginEdit;
            WinEdit uIUsernameEdit = this.UIMozillaFirefoxWindow.UIItemDocument1.UIUsernameEdit;
            WinEdit uIPasswordEdit = this.UIMozillaFirefoxWindow.UIItemDocument1.UIPasswordEdit;
            WinButton uILoginButton = this.UIMozillaFirefoxWindow.UIItemDocument1.UILoginButton;
            #endregion

            // Click 'Log in' text box
            Mouse.Click(uILoginEdit, new Point(24, 7));

            // Type 'Admin' in 'User name' text box
            uIUsernameEdit.Text = this.LogInAdminParams.UIUsernameEditText;

            // Type '{Tab}' in 'User name' text box
            Keyboard.SendKeys(uIUsernameEdit, this.LogInAdminParams.UIUsernameEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            Keyboard.SendKeys(uIPasswordEdit, this.LogInAdminParams.UIPasswordEditSendKeys, true);

            // Type '{Enter}' in 'Log in' button
            Keyboard.SendKeys(uILoginButton, this.LogInAdminParams.UILoginButtonSendKeys, ModifierKeys.None);
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public virtual LogInAdminParams LogInAdminParams
        {
            get
            {
                if ((this.mLogInAdminParams == null))
                {
                    this.mLogInAdminParams = new LogInAdminParams();
                }
                return this.mLogInAdminParams;
            }
        }
        
        public UIMozillaFirefoxWindow UIMozillaFirefoxWindow
        {
            get
            {
                if ((this.mUIMozillaFirefoxWindow == null))
                {
                    this.mUIMozillaFirefoxWindow = new UIMozillaFirefoxWindow();
                }
                return this.mUIMozillaFirefoxWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private LogInAdminParams mLogInAdminParams;
        
        private UIMozillaFirefoxWindow mUIMozillaFirefoxWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'Admin' in 'User name' text box
        /// </summary>
        public string UIUsernameEditText = "Admin";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditSendKeys = "8LkfRdwPx81+BvOdXGdCtfAL+Dcv75XlkzI+Vs5lLuLsGcGSWTS25QPs0e5LA4IF";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LogInAdmin'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class LogInAdminParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Admin' in 'User name' text box
        /// </summary>
        public string UIUsernameEditText = "Admin";
        
        /// <summary>
        /// Type '{Tab}' in 'User name' text box
        /// </summary>
        public string UIUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditSendKeys = "8LkfRdwPx81+BvOdXGdCtfAL+Dcv75XlkzI+Vs5lLuJXxwh1bTNz1P6pjar5+Jh9FJfOODBH/zM=";
        
        /// <summary>
        /// Type '{Enter}' in 'Log in' button
        /// </summary>
        public string UILoginButtonSendKeys = "{Enter}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMozillaFirefoxWindow : WinWindow
    {
        
        public UIMozillaFirefoxWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UILoginHyperlink UILoginHyperlink
        {
            get
            {
                if ((this.mUILoginHyperlink == null))
                {
                    this.mUILoginHyperlink = new UILoginHyperlink(this);
                }
                return this.mUILoginHyperlink;
            }
        }
        
        public UIItemDocument1 UIItemDocument1
        {
            get
            {
                if ((this.mUIItemDocument1 == null))
                {
                    this.mUIItemDocument1 = new UIItemDocument1(this);
                }
                return this.mUIItemDocument1;
            }
        }
        
        public UIItemPropertyPage UIItemPropertyPage
        {
            get
            {
                if ((this.mUIItemPropertyPage == null))
                {
                    this.mUIItemPropertyPage = new UIItemPropertyPage(this);
                }
                return this.mUIItemPropertyPage;
            }
        }
        
        public UIWyświetlinformacjeosButton UIWyświetlinformacjeosButton
        {
            get
            {
                if ((this.mUIWyświetlinformacjeosButton == null))
                {
                    this.mUIWyświetlinformacjeosButton = new UIWyświetlinformacjeosButton(this);
                }
                return this.mUIWyświetlinformacjeosButton;
            }
        }
        
        public UIManageGamesHyperlink UIManageGamesHyperlink
        {
            get
            {
                if ((this.mUIManageGamesHyperlink == null))
                {
                    this.mUIManageGamesHyperlink = new UIManageGamesHyperlink(this);
                }
                return this.mUIManageGamesHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private UILoginHyperlink mUILoginHyperlink;
        
        private UIItemDocument1 mUIItemDocument1;
        
        private UIItemPropertyPage mUIItemPropertyPage;
        
        private UIWyświetlinformacjeosButton mUIWyświetlinformacjeosButton;
        
        private UIManageGamesHyperlink mUIManageGamesHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILoginHyperlink : WinHyperlink
    {
        
        public UILoginHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Log in";
            this.WindowTitles.Add("Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UILoginEdit
        {
            get
            {
                if ((this.mUILoginEdit == null))
                {
                    this.mUILoginEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUILoginEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Log in";
                    this.mUILoginEdit.WindowTitles.Add("Mozilla Firefox");
                    #endregion
                }
                return this.mUILoginEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUILoginEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemDocument1 : WinControl
    {
        
        public UIItemDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
            this.WindowTitles.Add("Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIUsernameEdit
        {
            get
            {
                if ((this.mUIUsernameEdit == null))
                {
                    this.mUIUsernameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIUsernameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "User name";
                    this.mUIUsernameEdit.WindowTitles.Add("Mozilla Firefox");
                    #endregion
                }
                return this.mUIUsernameEdit;
            }
        }
        
        public WinEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.WindowTitles.Add("Mozilla Firefox");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public WinButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[WinButton.PropertyNames.Name] = "Log in";
                    this.mUILoginButton.WindowTitles.Add("Mozilla Firefox");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIUsernameEdit;
        
        private WinEdit mUIPasswordEdit;
        
        private WinButton mUILoginButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemPropertyPage : WinControl
    {
        
        public UIItemPropertyPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "PropertyPage";
            this.WindowTitles.Add("Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinControl UIItemDocument
        {
            get
            {
                if ((this.mUIItemDocument == null))
                {
                    this.mUIItemDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIItemDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIItemDocument.WindowTitles.Add("Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIItemDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWyświetlinformacjeosButton : WinButton
    {
        
        public UIWyświetlinformacjeosButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinButton.PropertyNames.Name] = "Wyświetl informacje o stronie";
            this.WindowTitles.Add("Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinButton UIWyświetlinformacjeosButton1
        {
            get
            {
                if ((this.mUIWyświetlinformacjeosButton1 == null))
                {
                    this.mUIWyświetlinformacjeosButton1 = new WinButton(this);
                    #region Search Criteria
                    this.mUIWyświetlinformacjeosButton1.SearchProperties[WinButton.PropertyNames.Name] = "Wyświetl informacje o stronie";
                    this.mUIWyświetlinformacjeosButton1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIWyświetlinformacjeosButton1.WindowTitles.Add("Mozilla Firefox");
                    #endregion
                }
                return this.mUIWyświetlinformacjeosButton1;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIWyświetlinformacjeosButton1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIManageGamesHyperlink : WinHyperlink
    {
        
        public UIManageGamesHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Manage Games";
            this.WindowTitles.Add("Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIManageGamesEdit
        {
            get
            {
                if ((this.mUIManageGamesEdit == null))
                {
                    this.mUIManageGamesEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIManageGamesEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Manage Games";
                    this.mUIManageGamesEdit.WindowTitles.Add("Mozilla Firefox");
                    #endregion
                }
                return this.mUIManageGamesEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIManageGamesEdit;
        #endregion
    }
}
